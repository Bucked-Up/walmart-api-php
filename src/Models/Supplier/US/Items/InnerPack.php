<?php

/**
 * InnerPack
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Walmart
 * @author   Jesse Evers
 * @link     https://highsidelabs.co
 * @email    jesse@highsidelabs.co
 */

/**
 * Item Management
 *
 * This class is auto-generated by the OpenAPI generator v6.6.0 (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

namespace Walmart\Models\Supplier\US\Items;

use Walmart\Models\BaseModel;

/**
 * InnerPack Class Doc Comment
 *
 * @category Class

 * @description Indicates an object defineing trade item dimensions of the Inner Pack.  An inner pack is also known as a break pack, warehouse pack, inner case, or pick.

 * @package  Walmart
 * @author   Jesse Evers
 * @link     https://highsidelabs.co
 * @email    jesse@highsidelabs.co
 */
class InnerPack extends BaseModel
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static string $openAPIModelName = 'InnerPack';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static array $openAPITypes = [
        'innerPackGTIN' => 'string',
        'innerPackDepth' => 'float',
        'innerPackWidth' => 'float',
        'innerPackHeight' => 'float',
        'innerPackWeight' => 'float',
        'qtySellableItemsInnerPack' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static array $openAPIFormats = [
        'innerPackGTIN' => null,
        'innerPackDepth' => 'double',
        'innerPackWidth' => 'double',
        'innerPackHeight' => 'double',
        'innerPackWeight' => 'double',
        'qtySellableItemsInnerPack' => 'int32'
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'innerPackGTIN' => false,
        'innerPackDepth' => false,
        'innerPackWidth' => false,
        'innerPackHeight' => false,
        'innerPackWeight' => false,
        'qtySellableItemsInnerPack' => false
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static array $attributeMap = [
        'innerPackGTIN' => 'innerPackGTIN',
        'innerPackDepth' => 'innerPackDepth',
        'innerPackWidth' => 'innerPackWidth',
        'innerPackHeight' => 'innerPackHeight',
        'innerPackWeight' => 'innerPackWeight',
        'qtySellableItemsInnerPack' => 'qtySellableItemsInnerPack'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static array $setters = [
        'innerPackGTIN' => 'setInnerPackGTIN',
        'innerPackDepth' => 'setInnerPackDepth',
        'innerPackWidth' => 'setInnerPackWidth',
        'innerPackHeight' => 'setInnerPackHeight',
        'innerPackWeight' => 'setInnerPackWeight',
        'qtySellableItemsInnerPack' => 'setQtySellableItemsInnerPack'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static array $getters = [
        'innerPackGTIN' => 'getInnerPackGTIN',
        'innerPackDepth' => 'getInnerPackDepth',
        'innerPackWidth' => 'getInnerPackWidth',
        'innerPackHeight' => 'getInnerPackHeight',
        'innerPackWeight' => 'getInnerPackWeight',
        'qtySellableItemsInnerPack' => 'getQtySellableItemsInnerPack'
    ];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('innerPackGTIN', $data ?? [], null);
        $this->setIfExists('innerPackDepth', $data ?? [], null);
        $this->setIfExists('innerPackWidth', $data ?? [], null);
        $this->setIfExists('innerPackHeight', $data ?? [], null);
        $this->setIfExists('innerPackWeight', $data ?? [], null);
        $this->setIfExists('qtySellableItemsInnerPack', $data ?? [], null);
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];


        return $invalidProperties;
    }

    /**
     * Gets innerPackGTIN
     *
     * @return string|null
    
     */
    public function getInnerPackGTIN()
    {
        return $this->container['innerPackGTIN'];
    }

    /**
     * Sets innerPackGTIN
     *
     * @param string|null $innerPackGTIN Indicates global trade item number (in the GTIN-14 format) that identifies the inner pack.  The Inner Pack also known as a break pack, warehouse pack, inner case, or pick.  The 14-digit Global Trade item number. If the returned value is less than 14 digits, add zeros at the beginning to lengthen it to 14 digits.
     *
     * @return self
    
     */
    public function setInnerPackGTIN($innerPackGTIN)
    {
        if (is_null($innerPackGTIN)) {
            throw new \InvalidArgumentException('non-nullable innerPackGTIN cannot be null');
        }

        $this->container['innerPackGTIN'] = $innerPackGTIN;
        return $this;
    }

    /**
     * Gets innerPackDepth
     *
     * @return float|null
    
     */
    public function getInnerPackDepth()
    {
        return $this->container['innerPackDepth'];
    }

    /**
     * Sets innerPackDepth
     *
     * @param float|null $innerPackDepth Indicates the longest horizontal (front to back) measurement (in inches).  If the trade item is the consumable (sellable) unit, this is measured with the product sitting on its natural base and facing forward. If the trade item is not the consumable (sellable) unit, this is measured with the product sitting on its natural base.  For more information, see <a href=\"https://supplierhelp.walmart.com\" target=\"_blank\">Supplier Help</a> and search for *pack dimensions*.
     *
     * @return self
    
     */
    public function setInnerPackDepth($innerPackDepth)
    {
        if (is_null($innerPackDepth)) {
            throw new \InvalidArgumentException('non-nullable innerPackDepth cannot be null');
        }

        $this->container['innerPackDepth'] = $innerPackDepth;
        return $this;
    }

    /**
     * Gets innerPackWidth
     *
     * @return float|null
    
     */
    public function getInnerPackWidth()
    {
        return $this->container['innerPackWidth'];
    }

    /**
     * Sets innerPackWidth
     *
     * @param float|null $innerPackWidth Indicates the longest horizontal (left to right) measurement (in inches).  If the trade item is the consumable (sellable) unit, this is measured with the product sitting on its natural base and facing forward. If the trade item is not the consumable (sellable) unit, this is measured with the product sitting on its natural base.  For more information, see <a href=\"https://supplierhelp.walmart.com\" target=\"_blank\">Supplier Help</a> and search for *pack dimensions*.
     *
     * @return self
    
     */
    public function setInnerPackWidth($innerPackWidth)
    {
        if (is_null($innerPackWidth)) {
            throw new \InvalidArgumentException('non-nullable innerPackWidth cannot be null');
        }

        $this->container['innerPackWidth'] = $innerPackWidth;
        return $this;
    }

    /**
     * Gets innerPackHeight
     *
     * @return float|null
    
     */
    public function getInnerPackHeight()
    {
        return $this->container['innerPackHeight'];
    }

    /**
     * Sets innerPackHeight
     *
     * @param float|null $innerPackHeight Indicates the longest horizontal (top to bottom) measurement (in inches).  If the trade item is the consumable (sellable) unit, this is measured with the product sitting on its natural base and facing forward. If the trade item is not the consumable (sellable) unit, this is measured with the product sitting on its natural base.  For more information, see <a href=\"https://supplierhelp.walmart.com\" target=\"_blank\">Supplier Help</a> and search for *pack dimensions*.
     *
     * @return self
    
     */
    public function setInnerPackHeight($innerPackHeight)
    {
        if (is_null($innerPackHeight)) {
            throw new \InvalidArgumentException('non-nullable innerPackHeight cannot be null');
        }

        $this->container['innerPackHeight'] = $innerPackHeight;
        return $this;
    }

    /**
     * Gets innerPackWeight
     *
     * @return float|null
    
     */
    public function getInnerPackWeight()
    {
        return $this->container['innerPackWeight'];
    }

    /**
     * Sets innerPackWeight
     *
     * @param float|null $innerPackWeight Indicates the weight (in pounds) of the trade item at each level, including all of its packaging materials.
     *
     * @return self
    
     */
    public function setInnerPackWeight($innerPackWeight)
    {
        if (is_null($innerPackWeight)) {
            throw new \InvalidArgumentException('non-nullable innerPackWeight cannot be null');
        }

        $this->container['innerPackWeight'] = $innerPackWeight;
        return $this;
    }

    /**
     * Gets qtySellableItemsInnerPack
     *
     * @return int|null
    
     */
    public function getQtySellableItemsInnerPack()
    {
        return $this->container['qtySellableItemsInnerPack'];
    }

    /**
     * Sets qtySellableItemsInnerPack
     *
     * @param int|null $qtySellableItemsInnerPack Indicates the total number of sellable units in the Inner Pack.
     *
     * @return self
    
     */
    public function setQtySellableItemsInnerPack($qtySellableItemsInnerPack)
    {
        if (is_null($qtySellableItemsInnerPack)) {
            throw new \InvalidArgumentException('non-nullable qtySellableItemsInnerPack cannot be null');
        }

        $this->container['qtySellableItemsInnerPack'] = $qtySellableItemsInnerPack;
        return $this;
    }
}
